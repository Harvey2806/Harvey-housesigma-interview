http {

    include      mime.types;
    ssl_certificate /etc/nginx/ssl/ipo.com.crt;
    ssl_certificate_key /etc/nginx/ssl/ipo.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # http 模块, 非https请求经过301重定向到https
    server {
        listen 80;
        server_name ipo.com www.ipo.com;
        return 301 https://$host$request_uri;
    }

    # https 模块
    server {
        #开启配置 ssl http2
        listen 443 ssl http2;
        server_name ipo.com www.ipo.com;
        ssl_certificate /etc/nginx/ssl/ipo.com.crt;
        ssl_certificate_key /etc/nginx/ssl/ipo.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        access_log /var/log/nginx/ipo.access.log combined;
        error_log /var/log/nginx/ipo.error.log;

        # 判断 UA 是否为 Google Bot,若是则反向代理到 bot.ipo.com
        if ($http_user_agent ~* "Google Bot") {
            proxy_pass http://bot.ipo.com$request_uri;
        }
        
        # /api/{name}代理到 PHP-FPM
        location ~ ^/api/(.*) {
            # 文件映射 /www/api/{name}.php
            fastcgi_pass unix:/run/php/php-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /www/api/$1.php;
            include fastcgi_params;
            # 应用限流规则
            limit_req zone=api burst=3 nodelay;
        }

        # 静态文件
        location /static/ {
            alias /www/static/;
        }
    
        # 根目录处理其他请求顺序
        location / {
            root /www/ipo;
            try_files $uri $uri/ /index.html /public/index.html @apirequest;
        }
        
        location @apirequest {
            rewrite ^ /api/request break;
        }

    # 限流规则设置
    limit_req_zone $binary_remote_addr zone=api:10m rate=1.5r/s;
    limit_conn_zone $binary_remote_addr zone=api:10m;
    limit_conn_status 429;

    }
}