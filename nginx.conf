http {

    # 限流规则设置
    limit_req_zone $binary_remote_addr zone=phplimit:10m rate=1.5r/s;

    # http 模块, 非https请求经过301重定向到https
    server {
        listen 80;
        server_name ipo.com www.ipo.com;
        return 301 https://$host$request_uri;
    }

    # https 模块
    server {
        #开启配置 ssl http2
        listen 443 ssl http2;
        server_name ipo.com www.ipo.com;
        ssl_certificate /etc/nginx/ssl/ipo.com.crt;
        ssl_certificate_key /etc/nginx/ssl/ipo.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        access_log /var/log/nginx/ipo.access.log combined;
        error_log /var/log/nginx/ipo.error.log;

        # 静态文件
        location /static/ {
            root /www/;
        }

        # 根目录
        location / {
            root /www/ipo/;
            # index查找顺序
            index index.html public/index.html;

            # 判断 UA 是否为 Google Bot
            if ($http_user_agent ~* "Google Bot") {
                set $proxy_to_bot 1;
            }

            # 若是则反向代理到 bot.ipo.com
            if ($proxy_to_bot = 1) {
                proxy_pass http://bot.ipo.com$request_uri;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # /api/{name}代理到 PHP-FPM
            if ($request_uri ~ ^/api/(.*)) {
                # 重定向文件到 /api/{name}.php
                rewrite ^/api/(.*)$ /api/$1.php break;
                fastcgi_pass unix:/run/php/php-fpm.sock;
                fastcgi_index index.php;
                include fastcgi_params;
                # 应用限流规则
                limit_req zone=phplimit burst=1 nodelay status=429;
            }

            # 其它请求代理到/api/request
            try_files $uri $uri/ /api/request;

        }
    }
}